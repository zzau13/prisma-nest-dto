// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixtures/arr-id.prisma 1`] = `
[
  {
    "content": "

export class ConnectPlantDto {
  plantId: string;
}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/plant/dto/connect-plant.dto.ts",
  },
  {
    "content": "



export class CreatePlantDto {
  
}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/plant/dto/create-plant.dto.ts",
  },
  {
    "content": "



export class UpdatePlantDto {
  
}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/plant/dto/update-plant.dto.ts",
  },
  {
    "content": "
import {ValidateNested} from 'class-validator'
import {Type} from 'class-transformer'
import {IntersectionType} from '@nestjs/swagger'
import {Product} from '../../product/entities/product.entity'
import {Item} from '../../item/entities/item.entity'

export class Plant {
  plantId: string ;
}
export class PlantRel {
  @Type(() => Product)
@ValidateNested()
products: Product[] ;
  @Type(() => Item)
@ValidateNested()
items: Item[] ;
}
export class PlantFull extends IntersectionType(Plant, PlantRel) {}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/plant/entities/plant.entity.ts",
  },
  {
    "content": "

export class ConnectProductDto {
  id: string;
  plantId: string;
}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/product/dto/connect-product.dto.ts",
  },
  {
    "content": "
import {IsOptional} from 'class-validator'
import {Prisma} from '@prisma/client'


export class CreateProductDto {
  plantId: string;
  name: string;
  description: string;
  images: Prisma.InputJsonValue[];
  @IsOptional()
highlighted?: boolean;
  @IsOptional()
reviewCount?: number;
  @IsOptional()
attributes?: Prisma.InputJsonValue;
  @IsOptional()
score?: number;
  @IsOptional()
decimal?: Prisma.Decimal;
  categoryId: string;
  companyId: string;
}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/product/dto/create-product.dto.ts",
  },
  {
    "content": "
import {IsOptional} from 'class-validator'
import {Prisma} from '@prisma/client'


export class UpdateProductDto {
  name?: string ;
  description?: string ;
  images?: Prisma.JsonValue[] ;
  @IsOptional()
highlighted?: boolean  | null;
  @IsOptional()
reviewCount?: number  | null;
  @IsOptional()
attributes?: Prisma.JsonValue  | null;
  @IsOptional()
score?: number  | null;
  @IsOptional()
decimal?: Prisma.Decimal  | null;
  categoryId?: string ;
  companyId?: string ;
}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/product/dto/update-product.dto.ts",
  },
  {
    "content": "
import {IsOptional,ValidateNested} from 'class-validator'
import {Type} from 'class-transformer'
import {Prisma} from '@prisma/client'
import {IntersectionType} from '@nestjs/swagger'
import {Plant} from '../../plant/entities/plant.entity'

export class Product {
  id: string ;
  plantId: string ;
  name: string ;
  description: string ;
  images: Prisma.JsonValue[] ;
  @IsOptional()
highlighted: boolean  | null;
  @IsOptional()
reviewCount: number  | null;
  @IsOptional()
attributes: Prisma.JsonValue  | null;
  @IsOptional()
score: number  | null;
  @IsOptional()
decimal: Prisma.Decimal  | null;
  categoryId: string ;
  companyId: string ;
}
export class ProductRel {
  @Type(() => Plant)
@ValidateNested()
plant: Plant ;
}
export class ProductFull extends IntersectionType(Product, ProductRel) {}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/product/entities/product.entity.ts",
  },
  {
    "content": "

export class ConnectItemDto {
  itemId: string;
  plantId: string;
  orderId: string;
}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/item/dto/connect-item.dto.ts",
  },
  {
    "content": "
import {IsOptional} from 'class-validator'
import {Prisma} from '@prisma/client'


export class CreateItemDto {
  plantId: string;
  orderId: string;
  @IsOptional()
diner?: Prisma.Decimal;
  productId: string;
  quantity: Prisma.Decimal;
}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/item/dto/create-item.dto.ts",
  },
  {
    "content": "
import {IsOptional} from 'class-validator'
import {Prisma} from '@prisma/client'


export class UpdateItemDto {
  @IsOptional()
diner?: Prisma.Decimal  | null;
  productId?: string ;
  quantity?: Prisma.Decimal ;
}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/item/dto/update-item.dto.ts",
  },
  {
    "content": "
import {IsOptional,ValidateNested} from 'class-validator'
import {Type} from 'class-transformer'
import {Prisma} from '@prisma/client'
import {IntersectionType} from '@nestjs/swagger'
import {Plant} from '../../plant/entities/plant.entity'

export class Item {
  itemId: string ;
  plantId: string ;
  orderId: string ;
  @IsOptional()
diner: Prisma.Decimal  | null;
  productId: string ;
  quantity: Prisma.Decimal ;
}
export class ItemRel {
  @Type(() => Plant)
@ValidateNested()
plant: Plant ;
}
export class ItemFull extends IntersectionType(Item, ItemRel) {}
",
    "fileName": "../src/@generated/prisma-generator-nestjs-dto/item/entities/item.entity.ts",
  },
]
`;
