datasource db {
  provider = "postgresql"
  url      = "postgresql://johndoe:mypassword@localhost:5432/mydb?schema=public"
}

generator nestjsDto {
  provider                        = "node -r ts-node/register/transpile-only src/cli.ts"
  output                          = "../src/@generated/prisma-generator-nestjs-dto"
  outputToNestJsResourceStructure = "false"
  exportRelationModifierClasses   = "true"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = ""
  fileNamingStyle                 = "camel"
}

model Product {
  /// @IsUUID('4')
  id          String   @id @db.Uuid
  description String   @db.VarChar(1024)
  images      Json[]   @db.Json
  /// @IsBoolean()
  highlighted Boolean? @default(false)
  /// @IsPositive()
  reviewCount Int?     @default(0)
  /// @IsDecimal({ decimal_digits: 2 })
  score       Float?
  /// @IsUUID('4')
  categoryId  String?  @db.Uuid
  /// @IsUUID('4')
  companyId   String   @db.Uuid

  /// @RReq
  /// @RLnOnAdd
  category Category? @relation(fields: [categoryId], references: [id])

  /// @RReq
  /// @RLnOnSet
  company Company @relation(fields: [companyId], references: [id])

  @@map("products")
}

model Category {
  id      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product Product[]
}

model Company {
  id      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product Product[]
}
